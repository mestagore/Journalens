<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAuGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABfoSURBVHja7Z0JlJ1leYD/kJUACmFfAqUiUvAURSoqBUQgy/zL3ffZspOExLBrIsmQ
        WZOAgFrU1opFVgsiVU6xWitYRe1xQ6hSFaiKbBYBCSokvH2/7//vZE4wOQNz5879730ez3vunGBm/sn3
        v8+3f5/jAMQY6U44sjTpSMF3pM11ZFFiHyn5p0jev1gS7o2Scv9bP18Q390mbpvYMF8nvRei/3ajZL11
        UgxOl+5gX5nb5ujfdWRx4EhXwD8wQEMm/gJN+pVpR0qaqM6JjlSCoyXjrZSk+yVN8MfFa3tZ2jTZRxNu
        2zbx3Kf07/6bfo/zpKzfS+5zpKgiWJGxPwsAGiX5y6Z21pp/ntbWHcnZmrTrJHAf1ER+ZdRJv2sZbNfv
        9VP9npfpzzlSzprnSGfCigYAJjLxl2kiHnu2JqPWzCsz0yXnF7QJ/x3brG+rcRiZJNzv6c8oyor0dNvS
        OEF/9soUBQFQ9+RfrEm/XgWQ8hxp9w/SGvrD2mx/vuaJv3OYn5H2rpb24CD7s/sKjixFAgB17O9r4l+q
        fX7fN83/N2lf/c5xqfV33RoQSXp3SiU4Rr92ZF0eCQDUJflXzXdEVmvN75rkf4s2y/+9rsk/UgIJ92v6
        DMfppz7TlY6syFFAAOMqgITW/Dntf5f92Zp4/1r3xN85Eu6X7eCgmXZMuxQQwLglf3sQxqLkG7T/fcOE
        1Px/riWQ8j5rn6miz1ZJUFAANU/+Ne2a+ClH7l42STLeReK1vTThyT88MKjPkvEvkq+smSTdKbtoCABq
        KYCj/9o2saUUvEsC99cNk/zV8PWZisEpktWuwJl0BQBql/zn5rTpr33/JemZ2ty+teGSvxop7xZZlJhp
        uwIr6AoA1EYAzuHhqH/eb6vLXP/rXyPwnD7jfLs+wDmDggOoiQDazQaf9AxJag3bqMk/shWwTJ+1gxYA
        wNiTf1nKkZxv+v4naT/7iYYXgHnGUvB2+8znsi4AYGwCWJVx5Kz5jmT8Sxpi2m8004IZ72I5Z44j769Q
        gABjEkBXUlsB6b21+X9Xwyf/jm7AF2V5Zm/pTlKAAGMSgJlWKwRHSeA+GhsBBO4jkvePlKxHAQKMTQCe
        2e47R7y252IjAFeftRicbeQFAGMVQMFfqQLYHhsBmGct+CtoAQCMVQBJ15G0ty4WA4AjBwLNMydZEQgw
        NgH4KoDAXR87AZhn9hEAwNgE0NbmaEJtiE3y75DABnNYCACMVQBtbT2xE0D4zBQgAAIAAAQAAAgAABAA
        ACAAAEAAAIAAAAABAAACAEAACAAAASAAAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEgAAAE
        gAAAEAACAEAACAAAASAAAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEgAAAEgAAAEAACAEAA
        CAAAASAAAASAAAAQAAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAABIAAABAAAgBAAAgAAAEgAAAE
        gAAAEAACAEAACAAAASAAAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEgAAAEgAAAEAACAEAA
        CAAAASAAAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEAAAIAAAQAAAgAABAAACAAAEAAAIAA
        AAABAAACAEAACAAAASAAAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEgAAAEgAAAEAACAEAA
        CAAAASAAAASAAAAQAAIAQAAIAAABIAAABIAAABAAAgBAAAgAAAEgAAAEgAAAEAACAEAACAAAASAAAASA
        AGLzkn1yqSOr5zkyWHJkYBdR/W+bKo6smW//DiAABBDXF2tIk3lLWZO6GCZ2v0af+bo8Q2OW/tnBGodF
        cbAKwPzZDFmfC/+/VTFsLtnvBQgAAcThhRrQpB8q70j6geJ0/fpYjYxGv8YtGt/UeEDj4SgeiP7M/LdB
        jbJ+n+P17+45LIOhom0lAAJAAI34IvVpkvYUQwHYmr50iEZF4waNRzVe1JBRxh81fqVxqwqgXeNQ2VgJ
        RdCnn/1l/sERAAJoqFrfxKD9PEATdbnGt6JEljGG+R7f0VihIjhQBovDXQRAADCRL8+WDkc25qJBvPbJ
        +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
</value>
  </data>
</root>